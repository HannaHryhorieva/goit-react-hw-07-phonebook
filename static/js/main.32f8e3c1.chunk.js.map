{"version":3,"sources":["redux/phonebook/phone-actions.js","redux/phonebook/phone-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["shortid","require","addContact","createAction","name","number","payload","id","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","phonebookReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","connect","dispatch","onSubmit","phoneActions","useState","setName","setNumber","handleChange","e","target","value","className","preventDefault","onChange","type","pattern","title","required","getVisibleContacts","filterV","normalizedFilter","toLowerCase","contact","includes","onDeleteContact","map","onClick","App","ContactList","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.32f8e3c1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst shortid = require('shortid');\n\nconst addContact = createAction('phonebook/add', ([name, number]) => ({\n  payload: {\n    id: shortid.generate(),\n    name: name,\n    number: number,\n  },\n}));\n\nconst deleteContact = createAction('phonebook/delete');\n\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phone-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport phonebookReducer from './phonebook/phone-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, phonebookReducer),\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\nconst persistor = persistStore(store);\nexport default { store, persistor };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport phoneActions from '../../redux/phonebook/phone-actions';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit([name, number]);\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    const valueOption = e.target.name;\n    switch (valueOption) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <form className=\"phonebookAdd\" onSubmit={handleSubmit}>\n      <label className=\"phonebookAdd-label\">\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          className=\"phonebookAdd-input\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebookAdd-label\">\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          className=\"phonebookAdd-input\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"TodoEditor__button\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ([name, number]) =>\n    dispatch(phoneActions.addContact([name, number])),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport phoneActions from '../../redux/phonebook/phone-actions';\n\nimport PropTypes from 'prop-types';\n\nconst Contacts = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"contacts-item\">\n          <span className=\"contacts-item-name\">{name}:</span>\n          <span className=\"contacts-item-name\">{number}</span>\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst getVisibleContacts = (contacts, filterV) => {\n  const normalizedFilter = filterV.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phoneActions.deleteContact(id)),\n});\nContacts.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { connect } from 'react-redux';\nimport phoneActions from '../../redux/phonebook/phone-actions';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className=\"filter-label\">\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className=\"filter-input\"\n      />\n    </label>\n  );\n}\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(phoneActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import './App.css';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h2 className=\"phonebook-title\">Phonebook</h2>\n      <ContactForm />\n\n      <h3 className=\"phonebook-title\">Contacts</h3>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}