{"version":3,"sources":["redux/phonebook/phone-actions.js","redux/phonebook/phone-reducer.js","redux/store.js","redux/phonebook/phone-selectors.js","redux/phonebook/phone-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","error","combineReducers","rootReducer","contacts","phonebookReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","getFilter","getAllContacts","getVisibleContacts","createSelector","filterV","normalizedFilter","toLowerCase","contact","name","includes","axios","defaults","baseURL","dispatch","get","then","data","catch","number","post","contactId","delete","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","target","value","className","onSubmit","preventDefault","undefined","find","alert","phoneOperations","onChange","type","pattern","title","required","Contacts","useEffect","map","onClick","Filter","App","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c7f3a34.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'phonebook/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'phonebook/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phone-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport phonebookReducer from './phonebook/phone-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nexport default { store };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filterV) => {\n    const normalizedFilter = filterV.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './phone-actions';\n\naxios.defaults.baseURL = 'http://localhost:1313';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact =\n  ([name, number]) =>\n  dispatch => {\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllContacts } from '../../redux/phonebook/phone-selectors';\nimport phoneOperations from '../../redux/phonebook/phone-operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactFind = contacts.find(contact => contact.name === name);\n    if (contactFind !== undefined) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const onSubmit = () =>\n        dispatch(phoneOperations.addContact([name, number]));\n      onSubmit();\n    }\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    const valueOption = e.target.name;\n    switch (valueOption) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <form className=\"phonebookAdd\" onSubmit={handleSubmit}>\n      <label className=\"phonebookAdd-label\">\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          className=\"phonebookAdd-input\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"phonebookAdd-label\">\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          className=\"phonebookAdd-input\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"TodoEditor__button\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport phoneOperations from '../../redux/phonebook/phone-operations';\nimport { getVisibleContacts } from '../../redux/phonebook/phone-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(phoneOperations.fetchContacts()), [dispatch]);\n\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className=\"contacts-item\">\n          <span className=\"contacts-item-name\">{name}:</span>\n          <span className=\"contacts-item-name\">{number}</span>\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => dispatch(phoneOperations.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phone-selectors';\n\nimport { changeFilter } from '../../redux/phonebook/phone-actions';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className=\"filter-label\">\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        className=\"filter-input\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import './App.css';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <div>\n        <h2 className=\"phonebook-title\">Phonebook</h2>\n        <ContactForm />\n      </div>\n\n      <h3 className=\"phonebook-title\">Contacts</h3>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}